<template>
    <div style="margin-top:15px;">
        <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="190px" class="demo-ruleForm">
            <el-form-item label="主题名称" required> 
                <template>
                    <el-radio-group v-model="ruleForm.isEnrol" @change="deleName()">
                        <el-radio :label="1">与培训报名有关</el-radio>
                        <el-radio :label="0">与培训报名无关</el-radio>
                    </el-radio-group>
                    <el-form-item prop="name" v-if='ruleForm.isEnrol==0' 
                    :rules="[
                        { required: true, message: '请输入主题名称'},
                        { min: 6, max: 30, message: '长度在 6 到 30 个字符,由字母、数字、汉字组成' }
                    ]">
                        <el-input v-model="ruleForm.name" class="textInput"></el-input>
                    </el-form-item>
                    <el-form-item prop="name" v-if='ruleForm.isEnrol==1'
                    :rules="[
                        { required: true, message: '请选择主题名称'}
                    ]">
                        <el-select v-model="ruleForm.name" placeholder="请选择" @change="trainDetail()">
                            <el-option v-for="(v,index) in trainList" :key='index' :label="v.name" :value="v.id"></el-option>
                        </el-select>
                    </el-form-item>
                </template>               
            </el-form-item>
        
            <el-form-item label="培训时间" required>
                <el-col :span="6">
                <el-form-item prop="trainStartDate" v-if='ruleForm.isEnrol==1'>
                    <el-date-picker type="datetime" :readonly='readonly' placeholder="选择日期" v-model="ruleForm.trainStartDate" style="width: 100%;" format='yyyy-MM-dd HH:mm:ss' value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                </el-form-item>
                <el-form-item prop="trainStartDate" v-if="ruleForm.isEnrol==0">
                    <el-date-picker type="datetime" placeholder="选择日期" v-model="ruleForm.trainStartDate" style="width: 100%;" format='yyyy-MM-dd HH:mm:ss' value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                </el-form-item>
                </el-col>
                <el-col class="line" :span="1">-</el-col>
                <el-col :span="6">
                    <el-form-item prop="trainEndDate"  v-if="ruleForm.isEnrol==1">
                        <el-date-picker type="datetime" :readonly='readonly' placeholder="选择日期" v-model="ruleForm.trainEndDate" style="width: 100%;" format='yyyy-MM-dd HH:mm:ss' value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                    </el-form-item>
                    <el-form-item prop="trainEndDate" v-if="ruleForm.isEnrol==0">
                        <el-date-picker type="datetime" placeholder="选择日期" v-model="ruleForm.trainEndDate" style="width: 100%;" format='yyyy-MM-dd HH:mm:ss' value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                    </el-form-item>
                </el-col>
            </el-form-item>            
            <el-form-item label="封面" required prop="coverPicUrl" v-if='ruleForm.isEnrol==1'>
                <template>
                    <el-upload
                        class="avatar-uploader"
                        :action="action"
                        :show-file-list="false"
                        :on-success="handleAvatarSuccess"
                        :before-upload="beforeAvatarUpload" :disabled='true'>
                        <img v-if="ruleForm.coverPicUrl" :src="ruleForm.coverPicUrl" class="avatar">
                        <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                    </el-upload>
                </template>
            </el-form-item>
            <el-form-item label="封面" required prop="coverPicUrl" v-if='ruleForm.isEnrol==0'>
                <template>
                    <el-upload
                        class="avatar-uploader"
                        :action="action"
                        :show-file-list="false"
                        :on-success="handleAvatarSuccess"
                        :before-upload="beforeAvatarUpload">
                        <img v-if="ruleForm.coverPicUrl" :src="ruleForm.coverPicUrl" class="avatar">
                        <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                    </el-upload>
                </template>
            </el-form-item>
            <el-form-item label="签到时间类型" prop="signTimeType">
                <el-select v-model="ruleForm.signTimeType" placeholder="请选择签到时间类型">
                <el-option label="每天签到一次" value="1"></el-option>
                <el-option label="每天签到两次" value="2"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="签到时刻范围" required v-if="ruleForm.signTimeType==1">
                <el-col :span="6">
                <el-form-item prop="amStartTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.amStartTime"
                        :picker-options="{
                        start: '00:00',
                        step: '00:15',
                        end: '23:59'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.amStartTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
                <el-col class="line" :span="1">-</el-col>
                <el-col :span="6">
                <el-form-item prop="amEndTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.amEndTime"
                        :picker-options="{
                        start: '00:00',
                        step: '00:15',
                        end: '23:59'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.amEndTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
            </el-form-item>
            <el-form-item label="上午签到时刻范围" required v-if="ruleForm.signTimeType==2">
                <el-col :span="6">
                <el-form-item prop="amStartTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.amStartTime"
                        :picker-options="{
                        start: '00:00',
                        step: '00:15',
                        end: '12:00'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.amStartTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
                <el-col class="line" :span="1">-</el-col>
                <el-col :span="6">
                <el-form-item prop="amEndTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.amEndTime"
                        :picker-options="{
                        start: '00:00',
                        step: '00:15',
                        end: '12:00'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.amEndTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
            </el-form-item>
            <el-form-item label="下午签到时刻范围" required v-if="ruleForm.signTimeType==2">
                <el-col :span="6">
                <el-form-item prop="pmStartTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.pmStartTime"
                        :picker-options="{
                        start: '12:00',
                        step: '00:15',
                        end: '23:59'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.pmStartTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
                <el-col class="line" :span="1">-</el-col>
                <el-col :span="6">
                <el-form-item prop="pmEndTime">
                    <el-time-select
                        placeholder="起始时间"
                        v-model="ruleForm.pmEndTime"
                        :picker-options="{
                        start: '12:00',
                        step: '00:15',
                        end: '23:59'
                        }">
                    </el-time-select>
                    <!-- <el-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.pmEndTime" style="width: 100%;" format='HH:mm:ss' value-format="HH:mm:ss"></el-time-picker> -->
                </el-form-item>
                </el-col>
            </el-form-item>
            <!-- <el-form-item label="状态" prop="status">
                <el-select v-model="ruleForm.status" placeholder="请选择">
                <el-option label="禁用" value="0"></el-option>
                <el-option label="启用" value="1"></el-option>
                </el-select>
            </el-form-item> -->
            <!-- <h2 class="grant">发放方式</h2>
            <el-form-item label="二维码发放">
                <img src="../../assets/logo.png" alt="">
                </br>
                <el-button type="primary" @click="downloadPic()">
                    <a href="##" target="_self" id="tpdown">下载二维码图片</a>
                </el-button>
            </el-form-item> -->
            <el-form-item label="指定查看二维码员工编号" required prop="domains" label-width="190px">
                <template>
                    <el-form-item 
                        v-for="(domain, index) in ruleForm.domains"
                        :prop="'domains.' + index + '.value'"
                        :key="domain.key"
                        :rules='rules1' class='addcode'>
                        <el-input v-model="domain.value" class="textInput"></el-input><el-button @click.prevent="removeDomain(domain)" style="margin-left:15px;">删除</el-button>
                    </el-form-item>                  
                </template>                
            </el-form-item>
            <el-form-item  label-width="190px">
                <el-button @click="addDomain">新增用户</el-button>
            </el-form-item>
            <el-form-item  label-width="190px">
                <el-button type="primary" @click="submitForm('ruleForm')">立即创建</el-button>
                <el-button @click="goback()">返回</el-button>
            </el-form-item>
        </el-form>
    </div>
</template>
<style scoped>
    .el-col-21{overflow-x: hidden}
    /* .el-form-item{ margin-bottom:10px;} */
    .el-select{width:50%;}
    .line{
        width: auto;
    }
    .textInput{
        width:50%;
    }
    .addcode{
        /* margin-top:20px; */
    }
    .avatar-uploader .el-upload {
        border: 1px dashed #d9d9d9;
        border-radius: 6px;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }
    .avatar-uploader .el-upload:hover {
        border-color: #409EFF;
    }
    .avatar-uploader-icon {
        font-size: 28px;
        color: #8c939d;
        width: 178px;
        height: 178px;
        line-height: 178px;
        text-align: center;
    }
    .avatar {
        width: 178px;
        height: 178px;
        display: block;
    }
    .grant{
        width:100%;
        padding:0 0 10px 25px;
        border-bottom:1px solid #ddd;
        font-size:16px;
    }
</style>
<script>
  import $ from 'jquery' 
  import qs from 'qs'
  import axios from 'axios'
  var arrs=[]
  export default {
    data() {
       var checkCode = (rule, value, callback) => {        
        if (value === '') {
            callback(new Error('请输入员工编号'));
        } else {
            let reg=/^[A-Za-z0-9]+$/;
              if(!reg.test(value)){
                  callback(new Error('请输入正确的员工编号'));
              }
            callback();
        }
      };
      var checkName=(rule, value, callback) => {
          if (value === '') {
              callback(new Error('请输入主题名称'));
          }else{        
            let reg=/^[\w\u3E00-\u9FA5]+$/;
            if(!reg.test(value)){
              callback(new Error('请输入正确的主题名称'));
            }
            callback();
          }
      }
      return {
        blone:true,
        ruleForm: {
          name: '',
          trainStartDate: '',
          trainEndDate: '',
          signTimeType:'',
          status:1,
          coverPicUrl:'',
          amStartTime:'',
          amEndTime:'',
          pmStartTime:'',
          pmEndTime:'',
          domains: [{
            value: ''
          }],
          isEnrol:1
        },
        action:this.biz.serverUrl+'signin/upload',
        readonly:true,
        imageUrl:'',        
        rules: {
        //   name: [
        //     { required: true, message: '请输入主题名称'},
        //     { min: 6, max: 50, message: '长度在 6 到 50 个字符,由字母、数字、汉字组成' },
        //     { validator: checkName }
        //   ],
          trainStartDate: [
            { required: true, message: '请选择培训开始时间'}
          ],
          trainEndDate: [
            { required: true, message: '请选择培训结束时间' }
          ],
          status: [
            { required: true, message: '请选择状态',trigger:'change'}
          ],
          signTimeType: [
            { required: true, message: '请选择签到时间类型',trigger:'change'}
          ],
          coverPicUrl:[
              { required: true, message: '请添加封面'}
          ],
          amStartTime:[
              { required: true, message: '请选择上午签到开始时间'}
          ],
          amEndTime:[
              { required: true, message: '请选择上午签到结束时间'}
          ],
          pmStartTime:[
              { required: true, message: '请选择下午签到开始时间'}
          ],
          pmEndTime:[
              { required: true, message: '请选择下午签到结束时间'}
          ]
        },
        rules1: [
          { required: true, validator: checkCode }
        ],
        trainList:[]
      };
    },
    mounted(){
        this.train()
    },
    methods: {
      submitForm(formName) {
        this.$refs[formName].validate((valid) => {
          if (valid) {
            let that = this
            let str=''
            this.ruleForm.domains.forEach(function(v,i){
                if(i==that.ruleForm.domains.length-1){
                    str+=v.value+''
                }else{
                    str+=v.value+','
                }                
            })
            this.ruleForm.qrCodeAdmin=str
            // 设置隐藏属性，将domains设置为隐藏属性，所以stringify的时候不会设置domains
            Object.defineProperty(this.ruleForm, "domains", { enumerable: false })
            // this.ruleForm.coverPicUrl=this.imageUrl
            let param = qs.stringify(this.ruleForm)
            console.log(param)
            console.log(this.ruleForm)
            this.axios.post(this.biz.serverUrl+'signin/add',param,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
              console.log(res)
              if(res.data.code==200){             
                that.$message({
                    type: 'success',
                    message: '添加成功!'
                });
                that.$router.push({path: '/signinList'});
              }else{
                that.$message({
                    type: 'error',
                    message: '添加失败!'
                });
              }
            }).catch(function (res) {
              console.log(res)
            })
          } else {
            console.log('error submit!!');
            return false;
          }
        });
      },
      resetForm(formName) {
        this.$refs[formName].resetFields();
      },
      goback(){
        history.go(-1)
      },
      removeDomain(item) {
        var index = this.ruleForm.domains.indexOf(item)
        
        if(this.ruleForm.domains.length==1){
            return;
        }else{
           if (index !== -1) {
                this.ruleForm.domains.splice(index, 1)
            } 
        }
      },
      addDomain() {
        this.ruleForm.domains.push({
          value: '',
          key: Date.now()
        });
        arrs=this.ruleForm.domains
      },
      deleName(){
          if(this.ruleForm.isEnrol==1){
              this.readonly=true
          }else if(this.ruleForm.isEnrol==0){
              this.readonly=false
          }
          this.ruleForm.name=''
          this.ruleForm.trainStartDate=''
          this.ruleForm.trainEndDate=''
          this.ruleForm.coverPicUrl=''
      },
      handleAvatarSuccess(res, file) {
        this.ruleForm.coverPicUrl = res.element.coverPicUrl
        //URL.createObjectURL(file.raw);
        // console.log(this.imageUrl)
        // this.ruleForm.coverPicUrl=file.name;
        console.log(res,file)
      },
      beforeAvatarUpload(file) {
        // const isJPG = file.type === 'image/jpeg';
        // const isPNG = file.type === 'image/png';
        // console.log(file)
        const isLt2M = file.size / 1024 / 1024 < 2;

        // if (!isJPG && !isPNG) {
        //   this.$message.error('上传头像图片只能是 JPG/PNG 格式!');
        // }
        if (!isLt2M) {
          this.$message.error('上传头像图片大小不能超过 2MB!');
        }
        // return isJPG && isLt2M;
        return isLt2M;
      },
      train(){
        let that = this
        let pages=qs.stringify({'page':1,'rows':1000})
        this.axios.post(this.biz.serverUrl+'enrol/list', pages,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
          console.log(res)
          if(res.data.code == 200){
              res.data.datas.forEach(function(v,i){
                  if(v.status==1){
                      let time=new Date(v.enrolEndDate).getTime();
                      let now=new Date().getTime();
                    //   console.log(time,now)
                    //   console.log(v)
                      if(time>=now){
                          that.trainList.push(v)
                          
                      }
                  }
              })
            //   that.trainList=res.data.datas
          }
        }).catch(function (res) {
          console.log(res)
        })
      },
      trainDetail(){
        let that=this
        this.axios.get(this.biz.serverUrl+'enrol/getEnrolById?id='+this.ruleForm.name,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
          console.log(res)
          if(res.data.code==200){
            that.ruleForm.trainStartDate=res.data.element.trainStartDate
            that.ruleForm.trainEndDate=res.data.element.trainEndDate
            that.ruleForm.name=res.data.element.name
            that.ruleForm.coverPicUrl=res.data.element.coverPicUrl
          }
        }).catch(function (res) {
          console.log(res)
        })
      },
      downloadPic:function(){
        //   $("#tpdown").attr("href",'http://image.zcool.com.cn/avatar/17/71/m_1265382211497.jpg');
      }
    }
  }
</script>