<template>
    <div>
        <el-form ref="form" :model="form" inline class="pt15 pl20">
            <el-form-item label="试卷名称">
                <el-input v-model="form.name"></el-input>
            </el-form-item>
            <el-form-item label="活动时间">
                <el-date-picker
                    v-model="value7"
                    type="daterange"
                    align="right"
                    unlink-panels
                    range-separator="至"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期"
                    :picker-options="pickerOptions">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="试卷状态">
                <el-select v-model="form.region" placeholder="请选择">
                    <el-option label="未发放" value="toPublish"></el-option>
                    <el-option label="已发放" value="published"></el-option>
                    <el-option label="已关闭" value="closed"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="创建人">
                <el-input v-model="form.create"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @click="onSubmit">查询</el-button>
                <el-button @click="resetForm('form')">重置</el-button>
            </el-form-item>
        </el-form>
        <el-row class="pr10">
            <el-col :span="24" align="right">
                <el-button type="primary" @click="goToAdd">新建试卷</el-button>
                <el-button type="primary">导出word</el-button>
            </el-col>
        </el-row>
        <div class="p10">
            <el-table :data="tableData.slice((currentPage-1)*pageSize,currentPage*pageSize)" style="width: 100%"
            @selection-change="handleSelectionChange" ref="multipleTable">
                <el-table-column
                    type="selection"
                    width="55">
                </el-table-column>
                <el-table-column
                    prop="tableNo"
                    label="序号"
                    width="60"
                    >
                </el-table-column>
                <el-table-column
                    prop="name"
                    label="试卷名称"
                    
                    >
                </el-table-column>
                <el-table-column
                    prop="score"
                    label="总分值"
                    width="90"
                    >
                </el-table-column>
                <el-table-column
                    prop="examTime"
                    label="考试时间"
                    width="100"
                    >
                </el-table-column>
                <el-table-column
                    prop="createTime"
                    label="创建时间"
                    width="160"
                    >
                </el-table-column>
                <el-table-column
                    prop="createUser"
                    label="创建人"
                    width="110"
                    >
                </el-table-column>
                <el-table-column
                    prop="status"
                    label="状态"
                    width="80">
                </el-table-column>
                <el-table-column
                    label="操作"width="265">
                    <template slot-scope="scope">
                        <el-button @click="view" type="primary" size="mini">查看</el-button>
                        <el-button type="primary" size="mini">发放</el-button>
                        <el-button type="primary" size="mini" @click="edit()">修改</el-button>
                        <el-button type="danger" size="mini"  @click="del(scope.row.id)">删除</el-button>
                        <!-- <el-button type="danger" size="mini"  @click="handleDelete(scope.$index, scope.row)">删除</el-button> -->
                    </template>
                </el-table-column>
            </el-table>
            <!--分页-->
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[5,10, 20, 50, 100]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="tableData.length" style="margin:15px auto;text-align: center">
            </el-pagination>
        </div>
    </div>
</template>
<style>
 .el-form--inline .el-form-item{ margin-bottom:10px;}
</style>

<script>
  export default {
    data() {
      return {
          pickerOptions: {
            shortcuts: [{
                text: '最近一周',
                onClick(picker) {
                    const end = new Date();
                    const start = new Date();
                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                    picker.$emit('pick', [start, end]);
                }
            }, {
                text: '最近一个月',
                onClick(picker) {
                    const end = new Date();
                    const start = new Date();
                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                    picker.$emit('pick', [start, end]);
                }
            }, {
                text: '最近三个月',
                onClick(picker) {
                    const end = new Date();
                    const start = new Date();
                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
                    picker.$emit('pick', [start, end]);
                }
            }]
        },
        value7: '',
        form: {
          name: '',
          create:'',
          region: ''
        },
        currentPage: 1,
        pageSize: 10,
        multipleSelection: [],
        tableData:[]
      }
    },
    mounted: function () {
      this.list()
    },
    methods: {
        handleSelectionChange(val) {
            this.multipleSelection = val;
        },
      goToAdd() {
        this.$router.push({path: '/examAdd'})
      },
      view() {
          this.$router.push({path: '/examView'})
      },
      onSubmit() {
        console.log('submit!');
      },
      resetForm(formName) {
        this.$refs[formName].resetFields();
      },
      list: function () {
        let that = this
        this.axios.post(this.biz.serverUrl + '/paper/list',{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
          that.tableData = res.data.datas
          for (let index = 0; index < that.tableData.length; index++) {
              that.tableData[index].tableNo = index + 1
          }
          that.form = res.data.fsp
        }).catch(function (res) {
          console.log(res)
        })
      },
      add: function () {
//        alert('add')
        this.$router.push({path: '/add'})
      },
      del: function (id) {console.log(id)
        let that = this
          
        this.$alert('试卷删除后无法恢复,您确认要删除？', '试卷删除', {
          confirmButtonText: '确定',
          callback: action => {
              if (action == 'confirm') {
                  // 确定删除
                this.axios.get(this.biz.serverUrl + '/paper/delete/'+id, this.biz.urlencodedConfig).then(function (res) {
                    if (res.data.code == 200) {
                        that.$message.success({message: '删除成功！'})
                        that.list()
                    } else {
                        that.$message.error({message: '删除失败！'})
                    }
                }).catch(function (res) {
                    console.log(res)
                })

              }else if (action == 'cancel') {
                  this.$message.error('取消删除')
              }
          }
        })
        
      },
      edit: function (id) {
        // this.$router.push({path: '/edit?id=' + id})
        this.$router.push({path: '/examEdit'})
      },
      handleSizeChange: function (size) {
        this.pageSize = size
//        console.log(size)
      },
      handleCurrentChange: function (currentPage) {
        this.currentPage = currentPage
        console.log(currentPage)
      },
      open() {
        this.$alert('试卷删除后无法恢复,您确认要删除？', '试卷删除', {
          confirmButtonText: '确定',
          callback: action => {
              console.log(action)
              if (action == 'confirm') {
                  this.$message.success('删除成功')
              }else if (action == 'cancel') {
                  this.$message.error('取消删除')
              }
          }
        })
      }

    }
  }
</script>
