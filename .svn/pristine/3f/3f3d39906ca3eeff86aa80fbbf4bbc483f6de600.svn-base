<template>
    <div style="margin-top:15px;">
        <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
            <el-form-item label="姓名" prop="name">
                <el-input v-model="ruleForm.name" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="工号" prop="code">
                <el-input v-model="ruleForm.code" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="公司编码" prop="companyId">
                <el-input v-model="ruleForm.companyId" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="微信id" prop="openid">
                <el-input v-model="ruleForm.openid" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="密码" prop="password">
                <el-input v-model="ruleForm.password" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="手机号码" prop="phone">
                <el-input v-model="ruleForm.phone" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="所在公司名称" prop="company">
                <el-input v-model="ruleForm.company" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="所在部门" prop="department">
                <el-input v-model="ruleForm.department" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="岗位名称" prop="position">
                <el-input v-model="ruleForm.position" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="岗位年限" prop="postionYears">
                <el-input v-model="ruleForm.postionYears" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="性别" prop="gender">
                <el-select v-model="ruleForm.gender" placeholder="请选择">
                    <el-option label="男" value="1"></el-option>
                    <el-option label="女" value="2"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="民族" prop="nation">
                <el-input v-model="ruleForm.nation" class="textInput"></el-input>
            </el-form-item>
            <el-form-item label="状态" prop="status">
                <el-select v-model="ruleForm.status" placeholder="请选择">
                    <el-option label="禁用" value="1"></el-option>
                    <el-option label="启用" value="2"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @click="submitForm('ruleForm')">确定</el-button>
                <el-button @click="resetForm('ruleForm')">重置</el-button>
            </el-form-item>
        </el-form>
    </div>
</template>
<style scoped>
    .el-form-item{ margin-bottom:10px;}
    .el-input{
        width:50%;
    }
</style>
<script>
  import $ from 'jquery' 
  import qs from 'qs'
  import axios from 'axios'
  export default {
    data() {
      var checkCode = (rule, value, callback) => {
        if (value === '') {
            callback(new Error('请输入员工编码'));
        } else {
            let reg=/^[A-Za-z0-9]+$/;
              if(!reg.test(value)){
                  callback(new Error('请输入正确的员工编码'));
              }
            callback();
        }
      };
      var checkcompanyid = (rule, value, callback) => {
        if (value === '') {
            callback(new Error('请输入公司编码'));
        } else {
            let reg=/^[A-Za-z0-9]+$/;
              if(!reg.test(value)){
                  callback(new Error('请输入正确的公司编码'));
              }
            callback();
        }
      };
      var checkPhone= (rule, value, callback) => {
        if (value === '') {
            // callback();
        }else{        
          let reg=/^1(3|4|5|7|8)\d{9}$/;
            if(!reg.test(value)){
                callback(new Error('请输入正确的电话号码'));
            }
          callback();
        }
      };
      return {
        ruleForm: {
          name: '',
          companyId:'',
          code:'',
          openid:'',
          password:'',
          phone:'',
          company:'',
          department:'',
          position:'',
          nation:'',
          gender:'',
          postionYears:'',
          status:''
        },
        rules: {
          name: [
            { required: true, message: '请输入主题名称', trigger: 'blur' },
            { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }
          ],
          companyId:[
            { required:true, validator: checkcompanyid, trigger: 'blur' }
          ],
          code: [
            { required: true, validator: checkCode, trigger: 'blur' }
          ],
          phone: [
            { validator: checkPhone, trigger: 'change' }
          ],
          department: [
            { required: true, message: '请填写部门', trigger: 'change' }
          ],
          gender: [
            { required: true, message: '请选择性别', trigger: 'change' }
          ],
        }
      };
    },
    mounted(){
      this.detail()
    },
    methods: {
      submitForm(formName) {
        this.$refs[formName].validate((valid) => {
          if (valid) {
            // alert('submit!');
            let that = this
            let param = qs.stringify(this.ruleForm)
            this.axios.post(this.biz.serverUrl+'employee/update',param,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
              console.log(res)
              if(res.status==200){             
                that.$message({
                    type: 'success',
                    message: '修改成功!'
                });
                that.$router.push({path: '/staffManage'});
              }else{
                that.$message({
                    type: 'error',
                    message: '修改失败!'
                });
              }
              // _this.tableData = res.data.datas
              // _this.form = res.data.fsp
            }).catch(function (res) {
              console.log(res)
            })
          } else {
            console.log('error submit!!');
            return false;
          }
        });
      },
      resetForm(formName) {
        this.$refs[formName].resetFields();
      },
      detail(){
        let id=this.$route.query.id
        let param = qs.stringify({'id':id})
        let that=this
        this.axios.get(this.biz.serverUrl+'employee/getEmployeeById?id='+id,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(function (res) {
          console.log(res)
          if(res.status==200){
            that.ruleForm.name=res.data.element.name;
            that.ruleForm.companyId=res.data.element.companyId;
            that.ruleForm.code=res.data.element.code;
            that.ruleForm.openid=res.data.element.openid;
            that.ruleForm.password=res.data.element.password;
            that.ruleForm.company=res.data.element.company;
            that.ruleForm.phone=res.data.element.phone;
            that.ruleForm.department=res.data.element.department;
            that.ruleForm.position=res.data.element.position;
            that.ruleForm.nation=res.data.element.nation;
            that.ruleForm.gender=res.data.element.gender;
            that.ruleForm.postionYears=res.data.element.postionYears;
            that.ruleForm.status=res.data.element.status;
          }
        }).catch(function (res) {
          console.log(res)
        })
      }
    }
  }
</script>